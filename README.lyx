#LyX 1.5.5 created this file. For more info see http://www.lyx.org/
\lyxformat 276
\begin_document
\begin_header
\textclass docbook
\options .-
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter courier
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\paperfontsize default
\spacing single
\papersize default
\use_geometry false
\use_amsmath 0
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language swedish
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
RELAX NG/Schematron Schema for GEDCOM 5.5 XML
\end_layout

\begin_layout Date
May 21, 2008
\end_layout

\begin_layout Author
\begin_inset CharStyle Firstname
show_label false
status inlined

\begin_layout Standard
Chad
\end_layout

\end_inset


\begin_inset CharStyle Surname
show_label false
status inlined

\begin_layout Standard
Albers
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Background
\end_layout

\begin_layout Standard
The Church of the Latter Days Saints' 
\begin_inset LatexCommand url
name "GEDCOM 5.5 Standard"
target "http://homepages.rootsweb.com/~pmcbride/gedcom/55gctoc.htm"

\end_inset

 provides a way to format, digitally store, and transfer genealogical data
 in a standardized, human readable, text file.
 Over the years, new standards, using the 
\begin_inset LatexCommand url
name "Extensible Markup Language (XML)"
target "http://www.w3.org/XML/"

\end_inset

, have been proposed.
 The web page 
\begin_inset LatexCommand url
name "here"
target "http://xml.coverpages.org/genealogy.html"

\end_inset

 provides a list.
\end_layout

\begin_layout Itemize
The Church of the Latter Day Saints (LDS) has proposed the GEDCOM XML 6.0
 Standard.
 This proposal represents a complete rewrite of GEDCOM 5.5 into XML markup.
 A DTD of this standard is published in the pdf 
\begin_inset LatexCommand url
name "documentation"
target "http://www.familysearch.org/GEDCOM/GedXML60.pdf"

\end_inset

.
 An unofficial DTD has also been 
\begin_inset LatexCommand url
name "released"
target "http://members.cox.net/leebr/genealogy/GEDCOM60.dtd"

\end_inset

.
 Considering that the LDS originally created the 5.5 standard, this was probably
 the best contender to replace GEDCOM 5.5.
 However, the numerous and often radical differences between the two standards
 renders the translation of old GEDCOM 5.5 data to new GEDCOM XML 6.0 data
 a non-trivial task.
\end_layout

\begin_layout Itemize
In 1998, Michael H.
 Kay 
\begin_inset LatexCommand url
target "proposed"

\end_inset

 a standard called 
\begin_inset LatexCommand url
name "GedML"
target "http://homepage.ntlworld.com/michael.h.kay/gedml/"

\end_inset

.
 A DTD for this proposal has been 
\begin_inset LatexCommand url
name "released"
target "http://users.breathe.com/mhkay/gedml/dtd.html"

\end_inset

.
 
\end_layout

\begin_layout Itemize
Cosoft has proposed 
\begin_inset LatexCommand url
name "GenXML 2.0"
target "http://cosoft.org/genxml/index.html"

\end_inset

.
 A schema for this proposal can be found 
\begin_inset LatexCommand url
name "here"
target "http://cosoft.org/genxml/genxml20.xsd"

\end_inset

.
\end_layout

\begin_layout Itemize
Jerry Fitzpatrick of Software Renovation Corporation developed 
\begin_inset LatexCommand url
name "GeniML"
target "http://www.softwarerenovation.com/igenie/GeniML.aspx"

\end_inset

.
 As far as I have seen, no dtd or schema has been published describing this
 proposal.
\end_layout

\begin_layout Standard
None of these proposals have gained widespread adoption, and GEDCOM 5.5 remains
 the format that nearly all genealogical programs export to and that users
 exchange their genealogical data using.
\end_layout

\begin_layout Standard
XML proponents can console themselves with the fact that the GEDCOM 5.5 standard
 has many of XML's features.
 Despite it's non-standard character set (Ansel), it is human-readable.
 Like XML elements, it also uses tags to delimit genealogical data; they
 precede the data.
 Finally, GEDCOM 5.5 tags can be nested under other tags, resembling XML's
 element's parent and child node trees.
 
\end_layout

\begin_layout Standard
Given these similarities, it is easy to envision a one-to-one translation
 of GEDCOM 5.5 into an XML format.
 GEDCOM 5.5 tags could be XML elements; XML's greater than 
\begin_inset Quotes ers
\end_inset

>
\begin_inset Quotes ers
\end_inset

 and less than 
\begin_inset Quotes ers
\end_inset

<
\begin_inset Quotes ers
\end_inset

 characters could convert tags into elements, and these closed elements
 could delimit genealogical data.
 Kay's GedML comes close to proposing such a one-to-one translation.
 Many of GedML's XML elements correspond to GEDCOM 5.5 tags; e.g., 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
INDI
\end_layout

\end_inset

 tags are simply 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
<INDI>
\end_layout

\end_inset

 elements.
 However, other tags have been translated; e.g., 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
SOUR
\end_layout

\end_inset

 tags are 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
<Source>
\end_layout

\end_inset

 elements.
 Another difference between GedML and GEDCOM 5.5 is the absent 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
<TRLR>
\end_layout

\end_inset

 element which is a required by GEDCOM 5.5 to indicate the end of a GEDCOM
 5.5 file.
 This element is left out of the GedML proposal because the closed document
 root element makes it superfluous.
 Due to these differences, GedML is not a one-to-one translation of GEDCOM
 5.5.
\end_layout

\begin_layout Standard

\emph on
The simplest XML alternative to GEDCOM 5.5 is a one-to-one translation of
 it's format into XML.
 
\emph default
All GEDCOM 5.5 tags correspond to XML elements with the same name.
 This XML version of GEDCOM 5.5 is called 
\emph on

\begin_inset Quotes sld
\end_inset

GEDCOM 5.5 XML
\emph default
.
\begin_inset Quotes srd
\end_inset

 To define this proposal in XML itself, I have written a 
\begin_inset LatexCommand url
name "RELAX NG"
target "http://www.oasis-open.org/committees/relax-ng/spec-20011203.html"

\end_inset

/
\begin_inset LatexCommand url
name "Schematron"
target "http://www.schematron.com/"

\end_inset

 schema, contained in the file called 
\begin_inset Quotes srd
\end_inset


\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset


\begin_inset Quotes srd
\end_inset

 accompanying this documentation.
\end_layout

\begin_layout Subsection*
Limitations of 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

 in relation to the GEDCOM 5.5 standard
\end_layout

\begin_layout Standard
Ideally, this schema would re-represented 100 percent of the GEDCOM 5.5 standard
 in XML form.
 It, unfortunately, does not.
 Most of its shortcomings are due to difficulties in describing what would
 be considered, in XML terms, mixed-content elements.
 Schematron handles most of these mix-content elements, but not all of them.
 Below is a small list 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

's shortcomings.
\end_layout

\begin_layout Itemize
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

 is unable to specify if a GEDCOM 5.5 data 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
DATE_VALUE
\end_layout

\end_inset

 has valid content.
 The possible combinations of 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
DATE_VALUE
\end_layout

\end_inset

s are simply too numerous to handle using RELAX NG or Schematron alone.
 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

can only be used to check if the 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
DATE_VALUE
\end_layout

\end_inset

 data is between 1 and 35 characters.
\end_layout

\begin_layout Itemize
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

 can only specify 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
EXACT_DATE
\end_layout

\end_inset

 GEDCOM 5.5 data within certain limits.
 It cannot check the 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
EXACT_DATE
\end_layout

\end_inset

 values of 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
TRANSMISSION_DATE
\end_layout

\end_inset

 and 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
CHANGE_DATE
\end_layout

\end_inset

.
 When it's able to specify the 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
EXACT_DATE
\end_layout

\end_inset

 value, it only check the English 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
MONTH
\end_layout

\end_inset

 abbreviations, (i.e., 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
JAN
\end_layout

\end_inset

, 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
FEB
\end_layout

\end_inset

, 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
MAR
\end_layout

\end_inset

, etc.).
\end_layout

\begin_layout Itemize
Normally, the regions in the 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
PLAC
\end_layout

\end_inset

 tag are separated by commas (i.e., Kansas City, Jackson County, Missouri,
 USA) or, alternatively, the delimiter specified in the 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
HEAD.PLAC.FORM
\end_layout

\end_inset

 tag.
 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

 does not specify if the 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
PLAC
\end_layout

\end_inset

 data is delimited.
\end_layout

\begin_layout Itemize
The names of individuals in the 
\family typewriter
NAME
\family default
 tag are usually formatted with backslashes to indicate first and last names
 (i.e., Joseph/Smith/).
 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

, regrettably, cannot describe the syntax of 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
NAME
\end_layout

\end_inset

 data.
\end_layout

\begin_layout Itemize
GEDCOM 5.5 allows for user-defined tags, even though it discourages their
 usage.
 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

 cannot anticipate user-defined tags.
\end_layout

\begin_layout Itemize
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

 does not describe the content of 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
SOURCE_CITATION
\end_layout

\end_inset

's 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
EVEN
\end_layout

\end_inset

 tag's 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
EVENT_TYPE_CITED_FROM
\end_layout

\end_inset

, even though the GEDCOM 5.5 standard specifies a restricted set of values.
 
\end_layout

\begin_layout Itemize
It also does not describe the content of 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
SOURCE_RECORD
\end_layout

\end_inset

's 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
EVEN
\end_layout

\end_inset

 tag's 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
EVENTS_RECORDED
\end_layout

\end_inset

, even though the GEDCOM 5.5 standard also specifies a restricted set of
 values.
\end_layout

\begin_layout Itemize
The 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
AGE
\end_layout

\end_inset

 tag permits values such as 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
CHILD
\end_layout

\end_inset

, 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
INFANT
\end_layout

\end_inset

, 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
STILLBORN
\end_layout

\end_inset

, along with '
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
y
\end_layout

\end_inset

','
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
m
\end_layout

\end_inset

','
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
d
\end_layout

\end_inset

' which respectively signify year, month, and day.
 Following the specification strictly, these value should be case-insensitive.
 However, in 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

, they currently are case-sensitive, defaulting to the lowercase values.
\end_layout

\begin_layout Itemize
The 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
MONTH
\end_layout

\end_inset

 values of 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
DATE_EXACT
\end_layout

\end_inset

 should also be case-insensitive, but in 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

's current implementation they are not.
 The defaults are the upper case values.
\end_layout

\begin_layout Subsection*
Schema License
\end_layout

\begin_layout Standard
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

 is released under the 
\begin_inset LatexCommand url
name "GNU General Public License Version 2"
target "http://www.gnu.org/licenses/old-licenses/gpl-2.0.html"

\end_inset

 (GPL).
 The full text of this license can be found in file called 
\begin_inset Quotes sld
\end_inset


\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gpl-2.0
\end_layout

\end_inset


\begin_inset Quotes srd
\end_inset

 included with 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection*
Schema Updates
\end_layout

\begin_layout Standard
Like any XML schema, the GEDCOM 5.5 XML schema will be posted on the web
 with a URL (Universal Resource Locator).
 The most up to date version will always be located at 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
\begin_inset LatexCommand url
name "http://www.neomantic.com/gedcom55xml/gedcom55XML.rng"
target "http://www.neomantic.com/gedcom55xml/gedcom55XML.rng"

\end_inset


\end_layout

\end_inset

.
 All previous versions of this document will be saved in the same directory.
\end_layout

\begin_layout Standard
Using the 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
\begin_inset LatexCommand url
name "trang"
target "http://www.thaiopensource.com/relaxng/trang.html"

\end_inset


\end_layout

\end_inset

 program, the XML version of the GEDCOM 5.5 XML RELAX NG schema has been
 converted to RELAX NG's 
\begin_inset LatexCommand url
name "compact syntax"
target "http://relaxng.org/compact-20021121.html"

\end_inset

.
 The file is called 
\begin_inset Quotes sld
\end_inset


\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rnc
\end_layout

\end_inset


\begin_inset Quotes srd
\end_inset

.
 The most recent up to date of the schema in compact syntax will be located
 at this url: 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
\begin_inset LatexCommand url
name "http://www.neomantic.com/gedcom55xml/gedcom55XML.rnc"
target "http://www.neomantic.com/gedcom55xml/gedcom55XML.rnc"

\end_inset


\end_layout

\end_inset

.
 The source code is licensed under the GNU General Public License Version
 2.
 Please note that I have been unable to use this file to validate a GEDCOM
 5.5 XML document.
\end_layout

\begin_layout Section*
Using 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

 - Validating a GEDCOM 5.5 Document
\end_layout

\begin_layout Standard
All XML schemas can be used for two purposes: providing guidance for how
 to write a valid XML document and testing if a XML document is 
\begin_inset Quotes sld
\end_inset

welformed
\begin_inset Quotes srd
\end_inset

 or 
\begin_inset Quotes sld
\end_inset

valid.
\begin_inset Quotes srd
\end_inset

 LDS's GEDCOM 5.5 standard already clearly describes how write genealogical
 data in marked up text files.
 Since the standard is not expressed in an XML schema, it cannot provide
 us a way to computationally determine if a GEDCOM 5.5 document is structured
 correctly.
 The schema in 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

 was written to fill that gap.
 If a GEDCOM 5.5 document can be converted into a GEDCOM 5.5 XML document,
 we have a way to check if the data is structured and formatted correctly
 by using 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

; we have a way to test if the GEDCOM 5.5 tags are appropriately ordered
 and nested, and if the content of tags fits within the parameter described
 in the standard.
\end_layout

\begin_layout Standard
The documentation below will demonstrate how to use the RELAX NG/Schematron
 GEDCOM 5.5 XML schema, 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

, to determine the validity (in the XML sense) of a preexisting GEDCOM 5.5
 files.
 
\end_layout

\begin_layout Standard
Validating a GEDCOM 5.5 XML document with 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

 is currently a complicated process.
 It requires familiarity with Java, a bit of programming skills, and some
 comfort with a command line user interface.
 
\end_layout

\begin_layout Standard
The instructions below follow several conventions: 
\end_layout

\begin_layout Itemize
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
family.ged
\end_layout

\end_inset

 represents a GEDCOM 5.5 file.
\end_layout

\begin_layout Itemize
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
family.xml
\end_layout

\end_inset

 represents the 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
family.ged
\end_layout

\end_inset

 file translated into a GEDCOM 5.5 XML document.
\end_layout

\begin_layout Itemize
Text sandwiched between < > indicates variables that will depend upon your
 computer's command line environment.
\end_layout

\begin_layout Standard
In rough outline, the process has two steps:
\end_layout

\begin_layout Enumerate
Convert the GEDCOM 5.5 file to a GEDCOM 5.5 XML document.
\end_layout

\begin_layout Enumerate
Validate the GEDCOM 5.5 XML document using 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection*

\series bold
Convert the GEDCOM 5.5 File to a GEDCOM 5.5 XML Document
\end_layout

\begin_layout Standard
Currently there is no quick and easy way to convert a GEDCOM 5.5 (or a .ged)
 file into an GEDCOM 5.5 XML (or .xml) file.
 I know of only one way to accomplish it now, and it requires some programming
 skills.
 To perform the conversion, we will need to compile Java source code, released
 by Michael Kay, to produce a java executable that can be used with Kay's
 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
saxon
\end_layout

\end_inset

 XML parser.
\end_layout

\begin_layout Enumerate
Download Kay's 
\begin_inset LatexCommand url
name "source code"
target "http://homepage.ntlworld.com/michael.h.kay/gedml/"

\end_inset

 and unzip it a location of your choose.
 Remember the path to this location.
 You need to know this path which will be referred to in another step using
 the variable 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
<path-to-gedml-classes>
\end_layout

\end_inset

.
\end_layout

\begin_layout Enumerate
Find the files called 
\begin_inset Quotes sld
\end_inset


\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
GedcomParser.java
\end_layout

\end_inset


\begin_inset Quotes srd
\end_inset

 and 
\begin_inset Quotes sld
\end_inset


\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
GedcomToXml.xsl
\end_layout

\end_inset


\begin_inset Quotes srd
\end_inset

.
\end_layout

\begin_layout Enumerate
Compile the file GedcomParser.java using your favorite Java distribution's
 compiler - 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
javac
\end_layout

\end_inset

.
 This will produces a class file called 
\begin_inset Quotes sld
\end_inset


\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
GedcomParser.class
\end_layout

\end_inset


\begin_inset Quotes srd
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Code
javac GedcomParser.java
\end_layout

\end_deeper
\begin_layout Enumerate
Download Kay's 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
\begin_inset LatexCommand url
name "saxon"
target "http://saxon.sourceforge.net/"

\end_inset


\end_layout

\end_inset

 parser, install it somewhere on your computer's hard drive, and remember
 it's location - which will be referred to below using the 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
<path-to-saxon>
\end_layout

\end_inset

 variable.
 (It may already be installed on your computer; on my GNU/Linux Debian system
 it was located at 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
/usr/share/java/saxon.jar
\end_layout

\end_inset

.) 
\end_layout

\begin_deeper
\begin_layout Standard
Issue the following command in your terminal:
\end_layout

\begin_layout Code
java -cp <path-to-saxon>:<path-to-gedml-classes> com.icl.saxon.StyleSheet -x
 GedcomParser family.ged <path-to-gedml-classes>/GedcomToXml.xsl
\end_layout

\end_deeper
\begin_layout Enumerate
The output of this command will be an XML version of a 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
family.ged
\end_layout

\end_inset

 file.
 The output will be piped to the standard output, but you can also redirect
 the output to a file by appending 
\begin_inset Quotes sld
\end_inset


\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
> family.xml
\end_layout

\end_inset


\begin_inset Quotes srd
\end_inset

 to the command above.
 The XML output will be a near perfect reproduction of a GEDCOM 5.5 into
 GEDCOM 5.5 XML.
 The only problem with the output is that it fails to add the 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
<TRLR/>
\end_layout

\end_inset

 element before the 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
</GED>
\end_layout

\end_inset

 element at the end of the document.
 Kay's GedcomParser removes this tag, because it is redundant; the 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
</GED>
\end_layout

\end_inset

 element performs the same function as the 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
TRLR
\end_layout

\end_inset

; it indicates the end of a document.
 To remain 100% faithful to the GEDCOM 5.5 standard, the 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
<TRLR>
\end_layout

\end_inset

 element has been included in the GEDCOM 5.5 XML schema.
\end_layout

\begin_layout Subsection*

\series bold
Validate the GEDCOM 5.5 XML Document Using 
\end_layout

\begin_layout Standard
Validating the XML file with RELAX NG and Schematron is another complicated
 affair.
 The complication arises because, to fully validate your GEDCOM 5.5 XML file
 using 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

, we must use a RELAX NG validator 
\emph on
and
\emph default
 a Schematron validator.
 (The entire process is described 
\begin_inset LatexCommand url
name "here"
target "http://www.xml.com/pub/a/2004/02/11/relaxtron.html?page=5"

\end_inset

, if you are curious about the details).
 There are a few easy solutions and a few complicated solutions.
 
\end_layout

\begin_layout Subsubsection*
Method 1 - Validating XML against RELAX NG and Schematron Simultaneously
\end_layout

\begin_layout Standard
One way of validating a GEDCOM 5.5 XML file with 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

 is by using Topologi.com's schematron Java classes.
 The 
\begin_inset LatexCommand url
name "zip file"
target "http://www.topologi.com/public/Schematron.zip"

\end_inset

 containes all the binary and scripts needed to validate an XML file with
 Schematron patterns embedded in RELAX NG or to simply test an XML file
 against only Schematron patterns.
 
\end_layout

\begin_layout Standard
To test both the RELAX NG and Schematron descriptions of a GEDCOM 5.5 XML
 file in a unix command line environment type the following command in the
 directory called 
\begin_inset Quotes sld
\end_inset

Schematron
\begin_inset Quotes srd
\end_inset

 producing by unzip the downloaded file above:
\end_layout

\begin_layout Code
java -cp ./Saxon/saxon.jar:./Java/Schematron.jar:./Jing/jing.jar com.topologi.schematron.
EmbRNGValidator family.xml gedcom55xml.rng
\end_layout

\begin_layout Standard
Please note that the error messages are not very robust.
 The program tells you were the errors have occurred by indicating a line
 number.
 It is up to you to figure out why the line is incorrect.
\end_layout

\begin_layout Subsubsection*
Method 2 - Validating XML against RELAX NG and Schematron Sequentially
\end_layout

\begin_layout Standard
The last method is the most difficult.
 Performing both the RELAX NG and the Schematron validations individually.
 
\end_layout

\begin_layout Enumerate
Validate the GEDCOM 5.5 XML file using the RELAX NG schemas.
 
\end_layout

\begin_deeper
\begin_layout Standard
RELAX NG validation can be performed by an open source Java program called
 
\begin_inset Quotes sld
\end_inset


\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
jing
\end_layout

\end_inset

,
\begin_inset Quotes srd
\end_inset

 written by the author of the RELAX NG standard.
 This command line Java application can be downloaded 
\begin_inset LatexCommand url
name "here"
target "http://www.thaiopensource.com/relaxng/jing.html"

\end_inset

.
 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
jing
\end_layout

\end_inset

 
\begin_inset LatexCommand url
name "supposedly"
target "http://www.thaiopensource.com/relaxng/jing-other.html"

\end_inset

 can validate file against the Schematron patterns embedded in the RELAX
 NG schema.
 However, I have been unable to get 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
jing
\end_layout

\end_inset

 to use 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

's Schematron patterns.
\end_layout

\begin_layout Standard
To perform the RELAX NG validation, type the following command in a terminal:
 
\end_layout

\begin_layout Code
java -jar <path-to-jing>/jing.jar gedcom55XML.rng family.xml
\end_layout

\begin_layout Standard

\family roman
The result will pipe to the terminal's standard output.
 jing will report all the errors it encounters.
 It won't say exactly what is wrong, but it will report what lines have
 errors in them.
 If jing reports no errors, your GEDCOM 5.5 XML file is valid, both in terms
 of its structure and most of its content.
\end_layout

\end_deeper
\begin_layout Enumerate
Perform the Schematron validation 
\end_layout

\begin_deeper
\begin_layout Standard
Step one only tests the validity of the XML file described by RELAX NG.
 It does not test the mixed-content inherent in the GEDCOM 5.5 (and GEDCOM
 5.5 XML) object model.
 To test the mixed content nodes, the XML file needs to be tested against
 only the Schematron patterns.
\end_layout

\begin_layout Standard
Testing the GEDCOM 5.5 XML file with 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

's Schematron patterns, normally requires three transformations.
 Since the Schematron patterns are embedded inside 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

, they need to be extracted.
 These extracted Schematron patterns need to be additionally transformed
 using the 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
RNG2Schtrn.xsl
\end_layout

\end_inset

 stylesheet available 
\begin_inset LatexCommand url
name "here"
target "http://www.topologi.com/public/Schtrn_XSD/RNG2Schtrn.zip"

\end_inset

.
 To use the extracted Schematron patterns, another transformation would
 need to take place using yet another style sheet available 
\begin_inset LatexCommand url
name "here"
target "http://www.ascc.net/xml/schematron/1.5/basic1-5/schematron-basic.xsl"

\end_inset

.
 This transformation would yield a file used to validate the 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
family.xml
\end_layout

\end_inset

 document.
 (The entire process is described 
\begin_inset LatexCommand url
name "here"
target "http://www.xml.com/pub/a/2004/02/11/relaxtron.html?page=5"

\end_inset

, if you are curious about the details)
\end_layout

\begin_layout Standard
For convenience, included with 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

 are both the extracted Schematron patterns - 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
gedcom55XML.sch
\end_layout

\end_inset

 - and the validation stylesheet - 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
validate-gedcom55XML-with-schematron.xsl
\end_layout

\end_inset

.
 To finally validate all the remaining content of your 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
family.xml
\end_layout

\end_inset

 document, you will have to apply 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
validate-gedcom55XML-with-schematron.xsl
\end_layout

\end_inset

 using 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
saxon
\end_layout

\end_inset

.
 To do so, issue the following command in a terminal:
\end_layout

\begin_layout Code
java -jar <path-to-saxon>/saxon.jar family.xml validate-gedcom55XML-with-schematro
n.xsl
\end_layout

\begin_layout Standard
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
saxon
\end_layout

\end_inset

will issue error messages if it finds any problems.
 The error messages are more straightforward than those of the first method.
\end_layout

\end_deeper
\begin_layout Section*
Documentation 
\end_layout

\begin_layout Subsection*
Documentation License
\end_layout

\begin_layout Standard
This document is released under the 
\begin_inset LatexCommand url
name "GNU Free Documentation License Version 1.2"
target "http://www.gnu.org/licenses/fdl.html"

\end_inset

.
 The full text of this license is found in the file called 
\begin_inset Quotes sld
\end_inset


\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
fdl.txt
\end_layout

\end_inset


\begin_inset Quotes srd
\end_inset

 released with 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection*
Documentation Updates
\end_layout

\begin_layout Standard
Updated versions of this documentation will be posted at 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
\begin_inset LatexCommand url
name "http://www.neomantic.com/gedcom55XML/README.html"
target "http://www.neomantic.com/gedcom55XML/README.html"

\end_inset


\end_layout

\end_inset

.
 
\end_layout

\begin_layout Section*
Contact
\end_layout

\begin_layout Standard
Please direct questions or requests for more information to 
\begin_inset LatexCommand htmlurl
name "chad@neomantic.com"
target "mailto:chad@neomantic.com"

\end_inset

.
\end_layout

\end_body
\end_document
