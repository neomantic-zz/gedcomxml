#LyX 1.5.5 created this file. For more info see http://www.lyx.org/
\lyxformat 276
\begin_document
\begin_header
\textclass docbook
\options .-
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter courier
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\paperfontsize default
\spacing single
\papersize default
\use_geometry false
\use_amsmath 0
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language swedish
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
RELAX NG/Schematron Schema for GEDCOM 5.5 XML (version 1.0)
\end_layout

\begin_layout Date
May 21, 2008
\end_layout

\begin_layout Author
\begin_inset CharStyle Firstname
show_label false
status inlined

\begin_layout Standard
Chad
\end_layout

\end_inset

 
\begin_inset CharStyle Surname
show_label false
status inlined

\begin_layout Standard
Albers
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Background
\end_layout

\begin_layout Standard
The Church of the Latter Days Saints' 
\begin_inset LatexCommand url
name "GEDCOM 5.5 Standard"
target "http://homepages.rootsweb.com/~pmcbride/gedcom/55gctoc.htm"

\end_inset

 provides a way to format, digitally store, and transfer genealogical data
 in a standardized, human readable text file.
 Over the years, new standards, using the 
\begin_inset LatexCommand url
name "Extensible Markup Language (XML)"
target "http://www.w3.org/XML/"

\end_inset

, have been proposed.
 The web page 
\begin_inset LatexCommand url
name "here"
target "http://xml.coverpages.org/genealogy.html"

\end_inset

 provides a list of these proposals.
\end_layout

\begin_layout Standard
None of these proposals have gained widespread acceptance, and GEDCOM 5.5
 remains the format that nearly all genealogical programs export to and
 that users still exchange their genealogical data using.
\end_layout

\begin_layout Subsection*
GEDCOM 5.5 XML
\end_layout

\begin_layout Standard
XML proponents can console themselves with the fact that the GEDCOM 5.5 standard
 bares some resemblance to an XML markup language.
 Despite its non-standard character set (Ansel), it is human readable text.
 Like XML elements, it also uses tags to delimit genealogical data; they
 precede the data.
 Finally, GEDCOM 5.5 tags can be nested under other tags, resembling the
 parent and child node trees of XML elements.
 
\end_layout

\begin_layout Standard
Given these similarities, it is easy to envision a one-to-one translation
 of GEDCOM 5.5 into an XML language.
 GEDCOM 5.5 tags could be XML elements; XML's greater than 
\begin_inset Quotes ers
\end_inset

>
\begin_inset Quotes ers
\end_inset

 and less than 
\begin_inset Quotes ers
\end_inset

<
\begin_inset Quotes ers
\end_inset

 characters could surround the tags, converting them into elements.
 Closed elements could delimit genealogical data.
 To differentiate it from other proposals, such an XML markup language could
 be called 
\begin_inset Quotes sld
\end_inset

GEDCOM 5.5 XML.
\begin_inset Quotes srd
\end_inset


\end_layout

\begin_layout Standard
Two XML markup languages have come close to describing GEDCOM 5.5 XML: GedML
 and GeniML.
\end_layout

\begin_layout Subsection*
GedML
\end_layout

\begin_layout Standard
In 1998, Michael H.
 Kay 
\begin_inset LatexCommand url
name "proposed"
target "http://lists.xml.org/archives/xml-dev/199804/msg00282.html"

\end_inset

 a standard called 
\begin_inset LatexCommand url
name "GedML"
target "http://homepage.ntlworld.com/michael.h.kay/gedml/"

\end_inset

.
 A XML Schema, a DTD, for this proposal has been 
\begin_inset LatexCommand url
name "released"
target "http://users.breathe.com/mhkay/gedml/dtd.html"

\end_inset

.
 In GedML's DTD, most of the GEDCOM 5.5 tags have been translated into XML
 elements with the same name; e.g., 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
INDI
\end_layout

\end_inset

 tags are simply 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
<INDI>
\end_layout

\end_inset

 elements.
 Other tags, though, have been translated; e.g., 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
SOUR
\end_layout

\end_inset

 tags are 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
<Source>
\end_layout

\end_inset

 elements.
 GedML is also missing the 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
<TRLR>
\end_layout

\end_inset

 element which replicates the GEDCOM 5.5 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
TRLR
\end_layout

\end_inset

 tag.
 This tag indicates the end of a GEDCOM 5.5 file.
 It is absent from GedML because the closed document root element performs
 the same function, rendering a 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
<TRLR/>
\end_layout

\end_inset

 element superfluous.
 Considering these differences, as far as the DTD is concerned, GedML is
 not a one-to-one translation of GEDCOM 5.5 into XML.
\end_layout

\begin_layout Standard
Kay, however, also released a Java language program that translates GEDCOM
 5.5 files into XML documents.
 The markup language of these documents does not have a XML schema (DTD,
 W3C XML Schema, etc.) However, a review of the output of his program reveals
 that all GEDCOM 5.5 tags have been translated to XML elements with the same
 name, just like GEDCOM 5.5 XML.
 There is, though, one missing element: the one corresponding to the 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
TRLR
\end_layout

\end_inset

 tag.
 Given this flaw, this version of GedML also fails to be a one-to-one translatio
n of GEDCOM 5.5 into XML.
\end_layout

\begin_layout Subsection*
GeniML
\end_layout

\begin_layout Standard
Jerry Fitzpatrick of Software Renovation Corporation developed 
\begin_inset LatexCommand url
name "GeniML"
target "http://www.softwarerenovation.com/igenie/GeniML.aspx"

\end_inset

.
 Like Kay, he released a 
\begin_inset LatexCommand url
name "program"
target "http://www.softwarerenovation.com/igenie/GeniMLConverter.zip"

\end_inset

 to convert GEDCOM 5.5 to XML.
 No schema for this markup language has been released.
 However, sample output of the programe included with the converter shows
 that GeniML appears to be a one-to-one translation of GEDCOM 5.5 into XML.
 GeniML even includes the 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
<TRLR>
\end_layout

\end_inset

 element.
 There are, however, some differences; for example, GeniML delimits surname
 data using a 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
<SURNAME>
\end_layout

\end_inset

 element, when GEDCOM 5.5 uses a 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
SURN
\end_layout

\end_inset

 tag for the same purpose.
 Considering this difference and many others, GeniML, like GedML, is not
 a one-to-one translation of GEDCOM 5.5 into XML markup.
 
\end_layout

\begin_layout Subsection*
RELAX NG/Schematron Schema for GEDCOM 5.5 XML
\end_layout

\begin_layout Standard
GEDCOM 5.5 XML differentiates itself from GedML and GeniML because it replicates
 the LDS's GEDCOM 5.5 standard using XML markup.
 Without exception, all GEDCOM 5.5 tags correspond to XML elements with the
 same name; all tags are preserved; and the parent-child relationships between
 the tags and elements parallels each other.
 
\end_layout

\begin_layout Standard
To define GEDCOM 5.5 XML, a schema is needed.
 To fulfill that need, I have written one in 
\begin_inset LatexCommand url
name "RELAX NG"
target "http://www.oasis-open.org/committees/relax-ng/spec-20011203.html"

\end_inset

/
\begin_inset LatexCommand url
name "Schematron"
target "http://www.schematron.com/"

\end_inset

.
 It is contained in the file called 
\begin_inset Quotes srd
\end_inset


\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
\begin_inset LatexCommand url
name "gedcom55XML.rng"
target "http://www.neomantic.com/gedcom55XML/1.0/gedcom55XML.rng"

\end_inset


\end_layout

\end_inset


\begin_inset Quotes srd
\end_inset

.
\end_layout

\begin_layout Standard
Like any schema, it can be used to validate, in the XML sense, a GEDCOM
 5.5 file that has been converted to a GEDCOM 5.5 XML document; i.e., it can
 be used to determine if the document is both 
\begin_inset Quotes sld
\end_inset

wellformed
\begin_inset Quotes srd
\end_inset

 and 
\begin_inset Quotes sld
\end_inset

valid.
\begin_inset Quotes srd
\end_inset

 This means that it can be used to test if the GEDCOM 5.5 tags (when converted
 to XML elements) are correctly nested within each other as prescribed by
 the LDS's GEDCOM 5.5 standard.
 It can also be used to test if the data delimited by the elements follows
 the strict guidelines prescribed by the standard.
\end_layout

\begin_layout Subsection*
Limitations of 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ideally, the RELAX NG/Schematron schema in 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

 would completely mirror the GEDCOM 5.5 standard.
 It, unfortunately, does not.
 Most of its shortcomings are due to difficulties in describing what would
 be considered, in XML terms, mixed-content elements.
 Schematron rules handle most of these mix-content elements, but not all
 of them.
 Below is a list where the schema has not been able to handle GEDCOM 5.5
 XML mixed-content elements.
\end_layout

\begin_layout Itemize
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

 does not describe valid content of a GEDCOM 5.5 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
DATE_VALUE
\end_layout

\end_inset

.
 The possible combinations of 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
DATE_VALUE
\end_layout

\end_inset

s are simply too numerous to handle using Schematron alone.
 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

 only prescribes that the length of character data of a 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
DATE_VALUE
\end_layout

\end_inset

 be between 1 and 35 characters.
\end_layout

\begin_layout Itemize
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

 does not describe all instances of 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
EXACT_DATE
\end_layout

\end_inset

 data.
 It fails to describe the 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
EXACT_DATE
\end_layout

\end_inset

 values of 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
TRANSMISSION_DATE
\end_layout

\end_inset

 and 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
CHANGE_DATE
\end_layout

\end_inset

.
 When the Schematron pattern is able to describe the 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
EXACT_DATE
\end_layout

\end_inset

 value, it only uses the English 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
MONTH
\end_layout

\end_inset

 abbreviations; i.e., 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
JAN
\end_layout

\end_inset

, 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
FEB
\end_layout

\end_inset

, 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
MAR
\end_layout

\end_inset

, etc..
\end_layout

\begin_layout Itemize
Normally, the regions in the 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
PLAC
\end_layout

\end_inset

 tag are separated by commas (e.g., Kansas City, Jackson County, Missouri,
 USA) or, alternatively, the delimiter specified in the 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
HEAD.PLAC.FORM
\end_layout

\end_inset

 tag.
 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

 ignores the delimiter of 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
PLAC
\end_layout

\end_inset

 data.
\end_layout

\begin_layout Itemize
The names of individuals in the 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
NAME
\end_layout

\end_inset

 tag are usually formatted with backslashes to indicate an individuals given
 name and surname (e.g., Joseph/Smith/).
 The Schematron patterns do not prescribe this format.
\end_layout

\begin_layout Itemize
GEDCOM 5.5 allows for user-defined tags, even though it discourages their
 usage.
 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

 does not allow user-defined tags.
\end_layout

\begin_layout Itemize
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

 does not describe the content of 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
SOURCE_CITATION
\end_layout

\end_inset

's 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
EVEN
\end_layout

\end_inset

 tag's 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
EVENT_TYPE_CITED_FROM
\end_layout

\end_inset

, even though the GEDCOM 5.5 standard specifies a restricted set of values.
 
\end_layout

\begin_layout Itemize
It also does not describe the content of 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
SOURCE_RECORD
\end_layout

\end_inset

's 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
EVEN
\end_layout

\end_inset

 tag's 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
EVENTS_RECORDED
\end_layout

\end_inset

, even though again the GEDCOM 5.5 standard specifies a restricted set of
 values.
\end_layout

\begin_layout Itemize
The 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
AGE
\end_layout

\end_inset

 tag permits values such as 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
CHILD
\end_layout

\end_inset

, 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
INFANT
\end_layout

\end_inset

, 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
STILLBORN
\end_layout

\end_inset

, along with '
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
y
\end_layout

\end_inset

','
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
m
\end_layout

\end_inset

','
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
d
\end_layout

\end_inset

' which respectively signify year, month, and day.
 Following the specification strictly, these values should be case-insensitive.
 In 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

, they currently are case sensitive, defaulting to the lowercase values.
\end_layout

\begin_layout Itemize
The 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
MONTH
\end_layout

\end_inset

 values of 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
DATE_EXACT
\end_layout

\end_inset

 should also be case insensitive, but in the current schema they are not.
 The defaults are the upper case values.
\end_layout

\begin_layout Subsection*
Schema License
\end_layout

\begin_layout Standard
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

 schema source code is released under the 
\begin_inset LatexCommand url
name "GNU General Public License Version 2"
target "http://www.gnu.org/licenses/old-licenses/gpl-2.0.html"

\end_inset

 (GPL).
 The full text of this license can be found in a file called 
\begin_inset Quotes sld
\end_inset


\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gpl-2.0
\end_layout

\end_inset


\begin_inset Quotes srd
\end_inset

 included with 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection*
Schema Updates
\end_layout

\begin_layout Standard
Version 1.0 of the GEDCOM 5.5 XML schema will be posted on the web with a
 URL at 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
\begin_inset LatexCommand url
name "http://www.neomantic.com/gedcom55XML/1.0/gedcom55XML.rng"
target "http://www.neomantic.com/gedcom55XML/1.0/gedcom55XML.rng"

\end_inset


\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Using the 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
\begin_inset LatexCommand url
name "trang"
target "http://www.thaiopensource.com/relaxng/trang.html"

\end_inset


\end_layout

\end_inset

 program, the XML version of the GEDCOM 5.5 XML RELAX NG schema has been
 converted to RELAX NG's 
\begin_inset LatexCommand url
name "compact syntax"
target "http://relaxng.org/compact-20021121.html"

\end_inset

.
 The file is called 
\begin_inset Quotes sld
\end_inset


\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rnc
\end_layout

\end_inset


\begin_inset Quotes srd
\end_inset

 and can be found at the following URL: 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
\begin_inset LatexCommand url
name "http://www.neomantic.com/gedcom55XML/1.0/gedcom55XML.rnc"
target "http://www.neomantic.com/gedcom55XML/1.0/gedcom55XML.rnc"

\end_inset


\end_layout

\end_inset

.
 This version's source code is also licensed under the GNU General Public
 License Version 2.
 (Please note that version has not been tested.)
\end_layout

\begin_layout Section*
Using 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

 for Validating a GEDCOM 5.5 XML Document
\end_layout

\begin_layout Standard
If a GEDCOM 5.5 file is converted into a GEDCOM 5.5 XML document, the RELAX
 NG/Schematron schema contained in 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

 provides a way to test the validity, as describe above, of the XML document.
\end_layout

\begin_layout Standard
The instructions below describe how to do so using several several external
 programs available on the internet.
 The instructions follow several conventions: 
\end_layout

\begin_layout Itemize
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
family.ged
\end_layout

\end_inset

 represents a GEDCOM 5.5 file.
\end_layout

\begin_layout Itemize
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
family.xml
\end_layout

\end_inset

 represents the 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
family.ged
\end_layout

\end_inset

 file translated into a GEDCOM 5.5 XML document.
\end_layout

\begin_layout Itemize
Text sandwiched between brackets [ ] indicates variables that will depend
 upon your computer's environment.
\end_layout

\begin_layout Standard
In rough outline, the process has two steps:
\end_layout

\begin_layout Enumerate
Convert the GEDCOM 5.5 file to a GEDCOM 5.5 XML document.
\end_layout

\begin_layout Enumerate
Validate the GEDCOM 5.5 XML document using 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection*

\series bold
Convert the GEDCOM 5.5 File to a GEDCOM 5.5 XML Document
\end_layout

\begin_layout Standard
Currently there is no quick and easy way to convert a GEDCOM 5.5 (or a .ged)
 file into an GEDCOM 5.5 XML (or .xml) file.
 I know of only one way to accomplish it now, and it requires some programming
 skills.
 To perform the conversion, you will need to use a Java program released
 by Michael Kay which, used with his famous 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
saxon
\end_layout

\end_inset

 XML parser, will perform the conversion.
\end_layout

\begin_layout Enumerate
Download Kay's 
\begin_inset LatexCommand url
name "source code"
target "http://homepage.ntlworld.com/michael.h.kay/gedml/"

\end_inset

 and unzip it in a location of your choosing.
 Remember the path to this location.
 You will need to know this path in a later step, and it will be referred
 to using the variable 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
[path-to-gedml-classes]
\end_layout

\end_inset

.
\end_layout

\begin_layout Enumerate
Find the files called 
\begin_inset Quotes sld
\end_inset


\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
GedcomParser.java
\end_layout

\end_inset


\begin_inset Quotes srd
\end_inset

 and 
\begin_inset Quotes sld
\end_inset


\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
GedcomToXml.xsl
\end_layout

\end_inset


\begin_inset Quotes srd
\end_inset

 in Kay's source code.
\end_layout

\begin_layout Enumerate
Compile the file 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
GedcomParser.java
\end_layout

\end_inset

 using your favorite Java distribution's compiler - 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
javac
\end_layout

\end_inset

.
 This will produces a class file called 
\begin_inset Quotes sld
\end_inset


\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
GedcomParser.class
\end_layout

\end_inset


\begin_inset Quotes srd
\end_inset

.
 The command is as follows:
\end_layout

\begin_deeper
\begin_layout Code
javac GedcomParser.java
\end_layout

\end_deeper
\begin_layout Enumerate
Download Kay's 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
\begin_inset LatexCommand url
name "saxon"
target "http://saxon.sourceforge.net/"

\end_inset


\end_layout

\end_inset

 parser, install it, and remember its location, which will be referred to
 below using the 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
[path-to-saxon]
\end_layout

\end_inset

 variable.
 (It may already be installed on your system; on my Debian GNU/Linux system
 it was located at 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
/usr/share/java/saxon.jar
\end_layout

\end_inset

.)
\end_layout

\begin_layout Enumerate
Convert 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
family.ged
\end_layout

\end_inset

 to 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
family.xml
\end_layout

\end_inset

 by issuing the following command in your terminal:
\end_layout

\begin_deeper
\begin_layout Code
java -cp [path-to-saxon]/saxon.jar:[path-to-gedml-classes] com.icl.saxon.StyleSheet
 -x GedcomParser family.ged [path-to-gedml-classes]/GedcomToXml.xsl
\end_layout

\end_deeper
\begin_layout Enumerate
The output of this command will be an XML version of 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
family.ged
\end_layout

\end_inset

.
 On a Unix-like OS, the conversion will be piped to the standard output,
 but it can also be redirected to a file by appending 
\begin_inset Quotes sld
\end_inset


\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
> family.xml
\end_layout

\end_inset


\begin_inset Quotes srd
\end_inset

 to the command above.
 The XML output will be a near perfect reproduction of a GEDCOM 5.5 into
 GEDCOM 5.5 XML.
 The only problem with the output is that it fails to add the 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
<TRLR/>
\end_layout

\end_inset

 element before the 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
</GED>
\end_layout

\end_inset

 element at the end of the document.
 Since Kay's GedcomParser was intended for a version of GedML, it removes
 the 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
<TRLR/>
\end_layout

\end_inset

 element.
\end_layout

\begin_layout Subsection*

\series bold
Validate the GEDCOM 5.5 XML Document 
\end_layout

\begin_layout Standard
Validating the XML file with RELAX NG and Schematron is a complicated process.
 The complication arises because, to fully validate your GEDCOM 5.5 XML file
 using 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

, a RELAX NG validator 
\emph on
and
\emph default
 a Schematron validator must be used.
 (The entire process is described 
\begin_inset LatexCommand url
name "here"
target "http://www.xml.com/pub/a/2004/02/11/relaxtron.html?page=5"

\end_inset

).
 Two methods for validation are described below.
 
\end_layout

\begin_layout Subsubsection*
Method 1 - Simultaneously Validate the XML against RELAX NG and Schematron
\end_layout

\begin_layout Standard
One way of validating a GEDCOM 5.5 XML file with 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

 is by using Topologi.com's 
\begin_inset LatexCommand url
target "Open Source Schematron Java classes"

\end_inset

.
 Their zip file 
\begin_inset LatexCommand url
name "here"
target "http://www.topologi.com/public/Schematron.zip"

\end_inset

 contains all the binaries and scripts needed to validate an XML file with
 Schematron rules embedded in RELAX NG patterns.
 To do so, type the following command in the directory called 
\begin_inset Quotes sld
\end_inset

Schematron
\begin_inset Quotes srd
\end_inset

 that was produced after unzipping the downloaded file above:
\end_layout

\begin_layout Code
java -cp ./Saxon/saxon.jar:./Java/Schematron.jar:./Jing/jing.jar com.topologi.schematron.
EmbRNGValidator family.xml gedcom55XML.rng
\end_layout

\begin_layout Standard
When this command finds errors in 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
family.xml
\end_layout

\end_inset

 using the RELAX NG patterns, it stops at the first error and indicates
 the line it is on.
 It then proceeds to check the Schematron rules.
 When this commands finds errors using the Schematron rules, it will not
 tell you which line has a problem, but only the text of the problematic
 line.
 In either case, the command does not tell you what exactly is wrong with
 the line.
 It is up to you to figure out why the line is incorrect by referring to
 the LDS's GEDCOM 5.5 standard.
 
\end_layout

\begin_layout Subsubsection*
Method 2 - Sequentially Validating the XML against RELAX NG and Schematron
\end_layout

\begin_layout Enumerate
Validate the GEDCOM 5.5 XML file using the RELAX NG schemas.
 
\end_layout

\begin_deeper
\begin_layout Standard
RELAX NG validation can be performed by an open source Java program called
 
\begin_inset Quotes sld
\end_inset


\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
jing
\end_layout

\end_inset

,
\begin_inset Quotes srd
\end_inset

 written by the author of the RELAX NG standard.
 This command line Java application can be downloaded 
\begin_inset LatexCommand url
name "here"
target "http://www.thaiopensource.com/relaxng/jing.html"

\end_inset

.
 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
jing
\end_layout

\end_inset

 
\begin_inset LatexCommand url
name "supposedly"
target "http://www.thaiopensource.com/relaxng/jing-other.html"

\end_inset

 can validate an XML file against the Schematron patterns embedded in the
 RELAX NG schema.
 However, I have been unable to get 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
jing
\end_layout

\end_inset

 to recognized the Schematron patterns.
\end_layout

\begin_layout Standard
To perform the RELAX NG validation, type the following command in a terminal:
 
\end_layout

\begin_layout Code
java -jar [path-to-jing]/jing.jar gedcom55XML.rng family.xml
\end_layout

\begin_layout Standard

\family roman
The result will pipe to the terminal's standard output.
 Unlike method 1, 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard

\family roman
jing
\end_layout

\end_inset

 will report 
\family default
\emph on
all
\family roman
\emph default
 the errors that it encounters.
 It won't say exactly what is wrong, but it will report what lines have
 errors.
 If 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard

\family roman
jing
\end_layout

\end_inset

 reports no errors, your GEDCOM 5.5 XML file is valid, both in terms of its
 structure and most of its content.
\end_layout

\end_deeper
\begin_layout Enumerate
Perform the Schematron validation 
\end_layout

\begin_deeper
\begin_layout Standard
Step one does not test the mixed-content inherent in the GEDCOM 5.5 (and
 GEDCOM 5.5 XML) object model.
 To test the mixed content nodes, the XML file must be tested against the
 Schematron rules.
 There a two ways to do this.
\end_layout

\begin_layout Enumerate
The first way to validate a GEDCOM 5.5 XML file with 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

's Schematron rules is by running the file through three XSL stylesheet
 transformations.
 Since the Schematron rules are embedded inside 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

, they need to be extracted using a stylesheet, 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
RNG2Schtrn.xsl
\end_layout

\end_inset

, available 
\begin_inset LatexCommand url
name "here"
target "http://www.topologi.com/public/Schtrn_XSD/RNG2Schtrn.zip"

\end_inset

.
 To use the extracted Schematron patterns, another transformation needs
 to be performed using yet another style sheet, 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
schematron-basic.xsl
\end_layout

\end_inset

, available 
\begin_inset LatexCommand url
name "here"
target "http://www.ascc.net/xml/schematron/1.5/basic1-5/schematron-basic.xsl"

\end_inset

.
 This transformation yields a file used to validate the 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
family.xml
\end_layout

\end_inset

 document.
 
\end_layout

\begin_deeper
\begin_layout Standard
For sake of convenience, I have included with 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

 the validation stylesheet - 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
validate-gedcom55XML-with-schematron.xsl
\end_layout

\end_inset

.
 I am distributing it under the GNU General Public License Version 2.
 To test the 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
family.xml
\end_layout

\end_inset

against the Schematron rules, you will have to apply 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
validate-gedcom55XML-with-schematron.xsl
\end_layout

\end_inset

 to the XML document using 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
saxon
\end_layout

\end_inset

.
 To do so, issue the following command in a terminal:
\end_layout

\begin_layout Code
java -jar [path-to-saxon]/saxon.jar family.xml validate-gedcom55XML-with-schematro
n.xsl
\end_layout

\begin_layout Standard
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
saxon
\end_layout

\end_inset

 will issue error messages if it finds any problems.
 The error messages are not very informative, but they can provide you some
 clues.
\end_layout

\end_deeper
\begin_layout Enumerate
The second way to validate a GEDCOM 5.5 XML file against 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

's Schematron rules involves using the Topologoi's Schematron Java classes
 used in Method 1 above.
 To use them, the Schematron rules need to be extracted from the RELAX NG
 patterns, as described above.
 For the sake of convenience, I have included the extracted Schematron rules
 with 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

.
 They are in the file called 
\begin_inset Quotes sld
\end_inset


\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.sch
\end_layout

\end_inset


\begin_inset Quotes srd
\end_inset

 and I'm distributing this source code under the GNU General Public License
 Version 2.
\end_layout

\begin_deeper
\begin_layout Code
java -cp ./Saxon/saxon.jar:./Java/Schematron.jar:./Jing/jing.jar com.topologi.schematron.
SchtrnValidator family.xml gedcom55XML.sch
\end_layout

\begin_layout Standard
The error messages produced by this command are more informative.
 Although this command does not indicate the line number of the error, it
 does show you the text which fails topass the Schematron rule.
\end_layout

\end_deeper
\end_deeper
\begin_layout Section*
Documentation
\end_layout

\begin_layout Subsection*
Documentation License
\end_layout

\begin_layout Standard
This document is released under the 
\begin_inset LatexCommand url
name "GNU Free Documentation License Version 1.2"
target "http://www.gnu.org/licenses/fdl.html"

\end_inset

.
 The full text of this license is found in the file called 
\begin_inset Quotes sld
\end_inset


\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
fdl.txt
\end_layout

\end_inset


\begin_inset Quotes srd
\end_inset

 released with 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
gedcom55XML.rng
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection*
Documentation Updates
\end_layout

\begin_layout Standard
Updated versions of this documentation will be posted at 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
\begin_inset LatexCommand url
name "http://www.neomantic.com/gedcom55XML/1.0/README.html"
target "http://www.neomantic.com/gedcom55XML/1.0/README.html"

\end_inset


\end_layout

\end_inset

.
 
\end_layout

\begin_layout Section*
Contact
\end_layout

\begin_layout Standard
Please direct questions or requests for more information to 
\begin_inset CharStyle Email
show_label false
status inlined

\begin_layout Standard
\begin_inset LatexCommand url
name "chad@neomantic.com"
target "mailto:chad@neomantic.com"

\end_inset


\end_layout

\end_inset

.
 Corrections, suggestions, bug reports, and patches are welcome as well.
\end_layout

\begin_layout Date
5/1/2008
\end_layout

\end_body
\end_document
